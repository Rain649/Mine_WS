<?xml version="1.0"?>
<launch>

  <param name="use_sim_time" value="true"/>

  <!-- - TF -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="base_link2vehicle_reference" args="-2 0 1 0 0 0 /base_link /vehicle_reference 10" /> -->
  <!-- these are the arguments you can pass to this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- 矿下地图模型 -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args="-file $(find mine)/urdf/mine.urdf -urdf -model mine -z 0.5" output="screen" />
  <node name="fake_joint_calibration" pkg="rostopic" type="rostopic" args="pub /calibrated std_msgs/Bool true" />

  <!-- 车辆模型  -->
  <arg name="model" default="$(find xacro)/xacro --inorder '$(find car)/urdf/car.xacro'" />
  <param name="robot_description" command="$(arg model)" />

  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model car -param robot_description -x -10 -z 1.8 "/>
  <!-- <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model car -param robot_description -x 100 -y 150 -z 1.8 "/> -->

  <!-- 运动控制 -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <!--- Run Rviz-->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find perception)/launch/simulation.rviz" />

  <!-- 感知程序 -->
  <node name="simuSegSave" pkg="perception" type="simuSegSave" output="screen"></node>
  <node name="intersection" pkg="perception" type="intersection" output="screen"></node>

  <arg name="pointCloud_topic_" default="/simuSegSave/cloud_Combined" />
  <arg name="frame_id_" default="vehicle_base_link" />
  <arg name="order" default="3" />
  <arg name="minClusterSize" default="100" />
  <arg name="clusterRadius" default="1.0" />
  <arg name="passX_min" default="-5.0" />
  <arg name="passZ_min" default="-0.8" />
  <arg name="passZ_max" default="1.0" />

  <node pkg="perception" type="laneDetection" name="laneDetection" output="screen">
    <param name="pointCloud_topic_" value="$(arg pointCloud_topic_)" />
    <param name="frame_id_" value="$(arg frame_id_)" />
    <param name="order" value="$(arg order)" />
    <param name="minClusterSize" value="$(arg minClusterSize)" />
    <param name="clusterRadius" value="$(arg clusterRadius)" />
    <param name="passX_min" value="$(arg passX_min)" />
    <param name="passZ_min" value="$(arg passZ_min)" />
    <param name="passZ_max" value="$(arg passZ_max)" />
  </node>

  <!-- <node name="navigation" pkg="perception" type="navigation" output="screen"></node> -->

  <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find robot_gazebo)/launch/mineSimulation.rviz"/> -->

  <!-- <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure"></node> -->

  <!-- <node name="rqt_plot" pkg="rqt_plot" type="rqt_plot"></node> -->

  <!-- <node name="rqt_logger_level" pkg="rqt_logger_level" type="rqt_logger_level"></node> -->

</launch>

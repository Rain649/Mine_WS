<?xml version="1.0"?>
<launch>

  <param name="use_sim_time" value="true"/>

  <!-- - TF -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="base_link2vehicle_reference" args="-2 0 1 0 0 0 /base_link /vehicle_reference 10" /> -->

  <!-- these are the arguments you can pass to this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- 矿下地图模型 -->
  <!-- <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args="-file $(find mine)/urdf/mine.urdf -urdf -model mine -z 0.5" output="screen" />
  <node name="fake_joint_calibration" pkg="rostopic" type="rostopic" args="pub /calibrated std_msgs/Bool true" /> -->


  <!-- 车辆模型  -->
  <arg name="model" default="$(find xacro)/xacro --inorder '$(find car)/urdf/car.xacro'" />
  <param name="robot_description" command="$(arg model)" />

  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model car -param robot_description -x 0 -y 0 -z 0.7 "/>

  <!-- 运动控制 -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <!-- 从yaml文件加载联合控制器的参数 -->
  <rosparam file="$(find car)/config/ctrl.yaml" command="load"/>

  <!-- 加载控制器 spawner -->
  <node name="controller_manager" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/car" args="left_rear_wheel_velocity_controller       right_rear_wheel_velocity_controller
	            left_front_wheel_velocity_controller      right_front_wheel_velocity_controller
	            left_steering_hinge_position_controller   right_steering_hinge_position_controller
	            joint_state_controller"/>

  <node pkg="car" type="servo_commands.py" name="servo_commands" output="screen">
  </node>




</launch>

